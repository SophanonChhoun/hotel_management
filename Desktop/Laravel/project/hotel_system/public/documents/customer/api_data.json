[
  {
    "type": "post",
    "url": "/api/login",
    "title": "2. Login",
    "version": "1.0.0",
    "name": "Login",
    "group": "Authentication",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Customer email</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Customer password</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": " {\n    \"email\": \"chhounsophanon14@gmail.com\"\n\t\"password\": \"password\"\n }",
        "type": "curl"
      }
    ],
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "data.access_token",
            "description": "<p>auth token to authorize access private api for each customer</p>"
          },
          {
            "group": "200",
            "type": "timestamp",
            "optional": false,
            "field": "data.expired_at",
            "description": "<p>auth token expiration time</p>"
          },
          {
            "group": "200",
            "type": "object",
            "optional": false,
            "field": "data.customer",
            "description": "<p>customer profile</p>"
          },
          {
            "group": "200",
            "type": "boolean",
            "optional": false,
            "field": "success",
            "description": "<p>success status</p>"
          },
          {
            "group": "200",
            "type": "object",
            "optional": false,
            "field": "data",
            "description": "<p>response data</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n{\n    \"success\": true,\n    \"data\": {\n        \"access_token\": \"12fbc3250eff41a730de108256275a098d3e20423ecd3d49b33e34c16e1db85a\",\n        \"expired_at\": 1609076704,\n        \"customer\": {\n            \"id\": 5,\n            \"first_name\": \"Sophanon\",\n            \"last_name\": \"Chhoun\",\n            \"dob\": \"2020-12-12\",\n            \"gender\": \"m\",\n            \"identification_id\": null,\n            \"street_address\": null,\n            \"city\": null,\n            \"country\": null,\n            \"zip\": null,\n            \"phone_number\": null,\n            \"is_enable\": 1,\n            \"created_at\": \"2020-12-26T13:45:04.000000Z\",\n            \"updated_at\": \"2020-12-26T13:45:04.000000Z\",\n            \"email\": \"borey@gmail.com\",\n            \"identification_type_id\": null\n        }\n    }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./Authentication.js",
    "groupTitle": "Authentication",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/login"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Content-Type",
            "description": "<p><code>application/x-www-form-urlencoded</code></p>"
          },
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "400",
            "optional": false,
            "field": "IncorrectUsernamePassword",
            "description": "<p>Username or Password is incorrect.</p>"
          },
          {
            "group": "4xx",
            "type": "401",
            "optional": false,
            "field": "AuthorizationInvalid",
            "description": "<p>authorization token is missing, expire, or invalid.</p>"
          },
          {
            "group": "4xx",
            "type": "412",
            "optional": false,
            "field": "ErrorValidation",
            "description": "<p>validation of required, format, min, max, ....</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "400 (IncorrectUsernamePassword):",
          "content": "HTTP/1.1 400 Bad Request\n{\n   \"success\": false,\n   \"message\": \"The username/password is incorrect.\"\n}",
          "type": "json"
        },
        {
          "title": "401 (AuthorizationInvalid):",
          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"success\": false,\n   \"message\": \"The authorization is invalid.\"\n}",
          "type": "json"
        },
        {
          "title": "412 (ErrorValidation):",
          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"success\": false,\n   \"message\": {\n       \"field\": [\n           \"validation message\"\n       ]\n   }\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/api/logout",
    "title": "3. Log Out",
    "version": "1.0.0",
    "name": "Logout",
    "group": "Authentication",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "String",
            "optional": false,
            "field": "data.message",
            "description": "<p>message of success</p>"
          },
          {
            "group": "200",
            "type": "boolean",
            "optional": false,
            "field": "success",
            "description": "<p>success status</p>"
          },
          {
            "group": "200",
            "type": "object",
            "optional": false,
            "field": "data",
            "description": "<p>response data</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 200 Success Request\n{\n   \"success\": true,\n   \"data\": {\n       \"message\": \"You have logged out successfully.\"\n   }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./Authentication.js",
    "groupTitle": "Authentication",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/logout"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Auth",
            "description": "<p>Access token from user login.</p>"
          },
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Content-Type",
            "description": "<p><code>application/x-www-form-urlencoded</code></p>"
          },
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "401",
            "optional": false,
            "field": "AuthorizationInvalid",
            "description": "<p>authorization token is missing, expire, or invalid.</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "401 (AuthorizationInvalid):",
          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"success\": false,\n   \"message\": \"The authorization is invalid.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/api/register",
    "title": "1. Register",
    "version": "1.0.0",
    "name": "Register",
    "group": "Authentication",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "first_name",
            "description": "<p>First name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "last_name",
            "description": "<p>Last name</p>"
          },
          {
            "group": "Parameter",
            "type": "date",
            "optional": false,
            "field": "dob",
            "description": "<p>Date of birth</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>email</p>"
          },
          {
            "group": "Parameter",
            "type": "char",
            "optional": false,
            "field": "gender",
            "description": "<p>gender</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>password</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "{\n   \"email\": \"chhounsophanon6@gmail.com\",\n   \"password\": \"password\",\n   \"dob\": \"12-12-2020\",\n   \"gender\": \"m\",\n   \"last_name\": \"Chhoun\",\n   \"first_name\": \"Sophanon\"\n}",
        "type": "curl"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n {\n    \"success\": true,\n    \"data\": {\n        \"access_token\": \"12fbc3250eff41a730de108256275a098d3e20423ecd3d49b33e34c16e1db85a\",\n        \"expired_at\": 1609076704,\n        \"customer\": {\n            \"id\": 5,\n            \"first_name\": \"Sophanon\",\n            \"last_name\": \"Chhoun\",\n            \"dob\": \"2020-12-12\",\n            \"gender\": \"m\",\n            \"identification_id\": null,\n            \"street_address\": null,\n            \"city\": null,\n            \"country\": null,\n            \"zip\": null,\n            \"phone_number\": null,\n            \"is_enable\": 1,\n            \"created_at\": \"2020-12-26T13:45:04.000000Z\",\n            \"updated_at\": \"2020-12-26T13:45:04.000000Z\",\n            \"email\": \"borey@gmail.com\",\n            \"identification_type_id\": null\n        }\n    }\n}",
          "type": "json"
        }
      ],
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "boolean",
            "optional": false,
            "field": "success",
            "description": "<p>success status</p>"
          },
          {
            "group": "200",
            "type": "object",
            "optional": false,
            "field": "data",
            "description": "<p>response data</p>"
          }
        ]
      }
    },
    "filename": "./Authentication.js",
    "groupTitle": "Authentication",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/register"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Content-Type",
            "description": "<p><code>application/x-www-form-urlencoded</code></p>"
          },
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "401",
            "optional": false,
            "field": "AuthorizationInvalid",
            "description": "<p>authorization token is missing, expire, or invalid.</p>"
          },
          {
            "group": "4xx",
            "type": "412",
            "optional": false,
            "field": "ErrorValidation",
            "description": "<p>validation of required, format, min, max, ....</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "401 (AuthorizationInvalid):",
          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"success\": false,\n   \"message\": \"The authorization is invalid.\"\n}",
          "type": "json"
        },
        {
          "title": "412 (ErrorValidation):",
          "content": "HTTP/1.1 401 Unauthorized\n{\n   \"success\": false,\n   \"message\": {\n       \"field\": [\n           \"validation message\"\n       ]\n   }\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/hotel/list",
    "title": "1. List hotel",
    "version": "1.0.0",
    "name": "List_hotel",
    "group": "Hotel",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Siem Reap hotel\",\n            \"city\": \"Siem Reap\",\n            \"country\": \"Cambodia\",\n            \"description\": \"<p>Hello World</p>\",\n            \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/5df240b2530816bd2bfae92d7942609c.png\",\n            \"imageAlt\": \"image\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Phnom Penh Hotel\",\n            \"city\": \"Phnom Penh\",\n            \"country\": \"Cambodia\",\n            \"description\": \"<p>Hello WOrld</p>\",\n            \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/64b645427336007bea5d870b3746c14a.png\",\n            \"imageAlt\": \"image\"\n        },\n        {\n            \"id\": 3,\n            \"title\": \"Borey Angkor\",\n            \"city\": \"Siem Reap\",\n            \"country\": \"Cambodia\",\n            \"description\": \"\",\n            \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/4904b34a695e2202d51d88c1c41a8b92.png\",\n            \"imageAlt\": \"image\"\n        }\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./hotel.js",
    "groupTitle": "Hotel",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/hotel/list"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/hotel/show/:id",
    "title": "2. Show hotel",
    "version": "1.0.0",
    "name": "show_hotel",
    "group": "Hotel",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n {\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"title\": \"Siem Reap hotel\",\n        \"street_address\": \"193\",\n        \"city\": \"Siem Reap\",\n        \"country\": \"Cambodia\",\n        \"description\": \"<p>Hello World</p>\",\n        \"medias\": [\n            {\n                \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/5df240b2530816bd2bfae92d7942609c.png\",\n                \"imageAlt\": \"image\"\n            }\n        ]\n    }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./hotel.js",
    "groupTitle": "Hotel",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/hotel/show/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/about_us",
    "title": "1. About Us",
    "version": "1.0.0",
    "name": "About_Us",
    "group": "Page",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n {\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"description\": \"<h1>Hello WOrld</h1>\\n\\n<p>There is no world</p>\",\n        \"created_at\": null,\n        \"updated_at\": \"2020-12-11T09:02:14.000000Z\"\n    }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./about_us.js",
    "groupTitle": "Page",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/about_us"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/contact_us",
    "title": "2. Contact Us",
    "version": "1.0.0",
    "name": "Contact_Us",
    "group": "Page",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n{\n    \"success\": true,\n    \"data\": [\n        {\n            \"title\": \"Phnom Penh Hotel\",\n            \"address\": \"Phnom Penh\",\n            \"phone_number\": \"+855 23 919 192\",\n            \"fax\": \"+855 24 220 663\",\n            \"email\": \"phnompenh@hotel.com\"\n        }\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./about_us.js",
    "groupTitle": "Page",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/contact_us"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/roomType/list",
    "title": "1. List Room Type",
    "version": "1.0.0",
    "name": "List_room_type",
    "group": "Room_Type",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 13,\n            \"title\": \"Hello\",\n            \"price\": 222,\n            \"description\": \"<p>sssxs</p>\",\n            \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/87723d9333ee51f22284240da5191904.png\",\n            \"imageAlt\": \"image\"\n        },\n        {\n            \"id\": 14,\n            \"title\": \"King\",\n            \"price\": 300,\n            \"description\": \"<p>King Room</p>\",\n            \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/1124995e13a578917814141c05b7f441.png\",\n            \"imageAlt\": \"image\"\n        }\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./roomType.js",
    "groupTitle": "Room_Type",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/roomType/list"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/roomType/show/:id",
    "title": "2. Show room type",
    "version": "1.0.0",
    "name": "show_room_type",
    "group": "Room_Type",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n {\n    \"success\": true,\n    \"data\": {\n        \"id\": 14,\n        \"title\": \"King\",\n        \"description\": \"<p>King Room</p>\",\n        \"price\": 300,\n        \"medias\": [\n            {\n                \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/1124995e13a578917814141c05b7f441.png\",\n                \"imageAlt\": \"image\"\n            }\n        ]\n    }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./roomType.js",
    "groupTitle": "Room_Type",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/roomType/show/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/spotlights",
    "title": "1. List Spotlights",
    "version": "1.0.0",
    "name": "List_Spotlights",
    "group": "Spotlights",
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": " HTTP/1.1 200 Success Request\n {\n     \"success\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"imageSrc\": \"http://127.0.0.1:8000/uploads/images/dcb14976fbc47bd4f6ed980d3c0a5899.png\",\n            \"imageAlt\": \"image\",\n            \"caption\": \"Hello\",\n            \"title\": \"Hello\",\n            \"description\": \"Hello\",\n            \"hotelId\": 1\n        }\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./spotlights.js",
    "groupTitle": "Spotlights",
    "sampleRequest": [
      {
        "url": "http://127.0.0.1:8000//api/spotlights"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "string",
            "optional": false,
            "field": "Accept",
            "description": "<p><code>application/json</code></p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "4xx": [
          {
            "group": "4xx",
            "type": "404",
            "optional": false,
            "field": "NotFound",
            "description": "<p>resource is not found</p>"
          }
        ],
        "5xx": [
          {
            "group": "5xx",
            "type": "500",
            "optional": false,
            "field": "InternalSeverError",
            "description": "<p>internal server error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 (NotFound):",
          "content": "HTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The :attribute is not found.\"\n}",
          "type": "json"
        },
        {
          "title": "500 (InternalSeverError):",
          "content": "HTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "",
    "url": "/",
    "title": "Status Code",
    "version": "1.0.0",
    "name": "StatusCode",
    "group": "Status_Code",
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "400",
            "description": "<p>Bad request</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "401",
            "description": "<p>Authorization/Auth token is invalid</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "403",
            "description": "<p>No access rights to access</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "404",
            "description": "<p>Resource is not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "412",
            "description": "<p>Validation Error</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "500",
            "description": "<p>Server Error</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 401 Error Authorization & Authentication Request\n{\n   \"success\": false,\n   \"message\": \"Customer is unauthorized. The Token is invalid.\"\n}\n\nHTTP/1.1 403 Forbidden\n{\n   \"success\": false,\n   \"message\": \"You don't have the access rights to this module.\"\n}\n\nHTTP/1.1 404 Not Found\n{\n   \"success\": false,\n   \"message\": \"The customer is not found.\"\n}\n\nHTTP/1.1 412 Error Validation Request\n{\n   \"success\": false,\n   \"message\": {\n       \"first_name\": [\n           \"The first name field is required.\"\n       ],\n   }\n}\n\nHTTP/1.1 500 Error In Server Request\n{\n   \"success\": false,\n   \"message\": \"Server Error\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "./Authentication.js",
    "groupTitle": "Status_Code",
    "sampleRequest": [
      {
        "url": "/"
      }
    ]
  }
]
